#include ../Make.flags.WIN64

#include ../Make.flags.All


##
## === Compile, link and execute:
##
LIBRARY_INSTALL_DIR = ../
MODULES_OUTPUT_DIR = ./ModuleFiles
ASP_LIB = libAspLibrary.a
ASP_INCLUDES_DIR = ./includes
# -I to include, -J  to tell make where to put the modules

PLATFORM := $(shell uname -s)

  #include ../Make.flags.rotor
COMPILER = /opt/intel/Compiler/11.1/080/bin/intel64/ifort
PREPROCESS_FLAG = -fpp
AR = ar
AR_FLAGS = -rv

NETCDF_INCLUDE_DIR = /usr/local/netcdf/3.6.3-intel11.1/include
NETCDF_INCLUDE_STATEMENT = -I$(NETCDF_INCLUDE_DIR)

NETCDF_LIBRARY_LINK = -L/usr/local/netcdf/3.6.3-intel11.1/lib -lnetcdff -lnetcdf
NETCDF_LIBRARY_LINK += /usr/local/hdf5/1.8.11-intel11.1/lib/ -lhdf5_hl -lhdf5
#NETCDF_LIBRARY_LINK += -L/usr/local/zlib/1.2.5/intel/lib -lz -lm -lz

ASPFFLAGS := -fpp -O -r8 -prec_div -DIFORT \
	-I$(MODULES_OUTPUT_DIR) -module $(MODULES_OUTPUT_DIR) -I$(ASP_INCLUDES_DIR)
F90FLAGS := $(ASPFFLAGS) -FR
ASPFFLAGS := $(ASPFFLAGS) -FI -132

FC = $(COMPILER)

ASP_ROOT = .
SOURCEDIR = $(ASP_ROOT)/src/
CHEMDIR = $(SOURCEDIR)Chemistry/
COAGDIR = $(SOURCEDIR)Coagulation/
COMPDIR = $(SOURCEDIR)ComputationalSubroutines/
CONDDIR = $(SOURCEDIR)Condensation/
EULERDIR =$(SOURCEDIR)EulerianEnvironment/
INFDIR = $(SOURCEDIR)InfrastructuralCode/
PARTDIR = $(SOURCEDIR)LagrangianParticles/
OUTPUTDIR = $(SOURCEDIR)OutputRoutines/
UNIFACDIR = $(SOURCEDIR)UNIFAC/

# 3/18/2016 CMB: Include the StringIO directory too
INCCOMMAND = -I$(SOURCEDIR) -I$(CHEMDIR) -I$(COAGDIR) -I$(COMPDIR)\
             -I$(EULERDIR) -I$(INFDIR) -I$(PARTDIR)\
             -I$(OUTPUTDIR) -I$(UNIFACDIR) -I../StringIO/ModuleFiles -I./

# CB: 
FILES   = $(SOURCEDIR)ModelParameters.f90 \
          $(SOURCEDIR)ReadInputDeck.f90  \
          $(SOURCEDIR)StepASP.f90 \
          $(SOURCEDIR)Time.f90 \
          $(SOURCEDIR)EulerianBoxDriver.f90 \
	  $(SOURCEDIR)asp_wrapper.f

MODULES = $(CHEMDIR)Chemistry.f90 \
          $(COAGDIR)Coagulation.f90 \
          $(CONDDIR)Condensation.f90 \
          $(EULERDIR)GridPointFields.f90 \
          $(INFDIR)InfrastructuralCode.f90 \
          $(PARTDIR)LagrangianAerosols.f90 \
          $(OUTPUTDIR)OutputRoutines.f90 \
          $(UNIFACDIR)unifac.f90 \
          $(UNIFACDIR)soa_unidriv.f90 \
          $(UNIFACDIR)soa_unidriva.f90 \
          $(COMPDIR)CDFNor.f90 \
          $(COMPDIR)dgaus8.f \
          $(COMPDIR)Gibbs-DuhemEvaluationFunction.f90 \
          $(COMPDIR)indexx.f \
          $(COMPDIR)lsodes.f \
          $(COMPDIR)PPND16.f

CHEMINC = $(CHEMDIR)AqPhaseChemistryInits.h \
	  $(CHEMDIR)AqPhaseReactionIntegration.h  \
	  $(CHEMDIR)ChemicalPropertyRoutines.h \
	  $(CHEMDIR)ChemistryDerivativeStructures.h \
	  $(CHEMDIR)ChemistryParametersInitRoutines.h \
	  $(CHEMDIR)EvolveGasChemistry.h\
	  $(CHEMDIR)GasPhaseChemistryInits.h \
	  $(CHEMDIR)OrgPhaseChemInits.h

COAGINC = $(COAGDIR)CoagulationKernels.h

CONDINC = $(CONDDIR)AqOrgCondensationIntegrator.h \
          $(CONDDIR)binsolu.h \
          $(CONDDIR)CondensationInitialization.h  \
          $(CONDDIR)CondensationIntegrator.h \
          $(CONDDIR)CondensationRelatedFunctions.h  \
          $(CONDDIR)HydrophobicCondensationFunctions.h \
          $(CONDDIR)OrgCondensationIntegrator.h

EULERINC = $(EULERDIR)GasPhaseChemistry.h \
           $(EULERDIR)Initialize.h  \
           $(EULERDIR)InterpolateGrid.h \
           $(EULERDIR)Pressure.h  \
           $(EULERDIR)SetGrid.h \
           $(EULERDIR)Temperature.h \
           $(EULERDIR)Water.h

INFINC = $(INFDIR)Counters.h  \
         $(INFDIR)InputOutputCommands.h \
         $(INFDIR)StringCommands.h

PARTINC = $(PARTDIR)InitializationAndSamplingRoutines.h  \
          $(PARTDIR)ParticleAttributes.h \
          $(PARTDIR)ParticleStructure.h  \
          $(PARTDIR)SCTailorMakeParticle.h \
          $(PARTDIR)SortAerosol.h \
          $(PARTDIR)Thermodynamics.h

UNIFACINC = $(UNIFACDIR)unifacparam.h \
            $(UNIFACDIR)unifacparamMattAq.h

ALLINC = $(CHEMINC) $(COAGINC) $(CONDINC) $(EULERINC) \
	 $(INFINC) $(PARTINC) $(UNIFACINC)

FILESINC = $(ALLINC)

FILESDUMP = asp

OBJECTS :=
OBJECTS := $(OBJECTS) \
           CDFNor.o indexx.o lsodes.o \
           PPND16.o \
           dgaus8.o DMiLay.o
OBJECTS := $(OBJECTS) \
           ModelParameters.o \
           InfrastructuralCode.o \
           GridPointFields.o \
           Time.o \
           Chemistry.o \
           Gibbs-DuhemEvaluationFunction.o \
           LagrangianAerosols.o \
           Condensation.o soa_unidriv.o \
           soa_unidriva.o unifac.o \
           OutputRoutines.o \
           Coagulation.o \
           ReadInputDeck.o \
           StepASP.o

EXEOBJECTS := $(OBJECTS) DevelopmentDriver.o

# === Modules: 0 grid define; 1 essential; d type define; s all
MODASP := DMiLay.o CDFNor.o indexx.o lsodes.o \
           PPND16.o \
           dgaus8.o \
           ModelParameters.o \
           InfrastructuralCode.o \
           GridPointFields.o \
           Time.o \
           Chemistry.o \
           Gibbs-DuhemEvaluationFunction.o \
           LagrangianAerosols.o \
           Condensation.o soa_unidriv.o \
           soa_unidriva.o unifac.o \
           OutputRoutines.o \
           Coagulation.o \
           ReadInputDeck.o \
           StepASP.o 



MODASPEXEC := $(MODASP) DevelopmentDriver.o

MODS := $(MODASP)
EXECMODS := $(MODASPEXEC)


# TODO: Multithreading not yet enabled
#ifeq ($(PROCESSOR_MODE),multiproc)
#    #ASPFFLAGS := -openmp -Dmultitask	# these are ifort, need to modify!
#endif

#F90FLAGS := $(ASPFFLAGS) -ffree-form -ffree-line-length-none
#ASPFFLAGS := $(ASPFFLAGS) -ffixed-form -ffixed-line-length-132


# CB: What if I change all inclusions of header files to be -I?
# UPDATE: CHANGING *ALL* COMPILES to the same type as STILT-Chem?

# CB: Equivalent of -traceback in gfortran is -fbacktrace
CDFNor.o: $(COMPDIR)CDFNor.f90
	$(FC) -c $(F90FLAGS) $<

indexx.o: $(COMPDIR)indexx.f
	$(FC) -c $(ASPFFLAGS) $<

lsodes.o: $(COMPDIR)lsodes.f
	$(FC) -c $(ASPFFLAGS) $<

PPND16.o: $(COMPDIR)PPND16.f
	$(FC) -c $(ASPFFLAGS) $<

dgaus8.o: $(COMPDIR)dgaus8.f
	$(FC) -c $(ASPFFLAGS) $<

DMiLay.o: $(SOURCEDIR)DMiLay.f
	$(FC) -c $(ASPFFLAGS) $<

unifac.o: $(UNIFACDIR)unifac.f
	$(FC) -c $(ASPFFLAGS) $<

soa_unidriv.o: $(UNIFACDIR)soa_unidriv.f \
        unifac.o $(UNIFACDIR)unifacparam.h
	$(FC) -c $(ASPFFLAGS) $<

soa_unidriva.o: $(UNIFACDIR)soa_unidriva.f \
        unifac.o $(UNIFACDIR)unifacparamMattAq.h
	$(FC) -c $(ASPFFLAGS) $<

ModelParameters.o: $(SOURCEDIR)ModelParameters.f90
	$(FC) -c $(F90FLAGS) $<

Gibbs-DuhemEvaluationFunction.o: \
        $(COMPDIR)Gibbs-DuhemEvaluationFunction.f90
	$(FC) -c $(F90FLAGS) $<

#InfrastructuralCode.o: $(INFDIR)InfrastructuralCode.f90 \
#        $(INFINC) StringIO.o
#	$(FC) -c $(F90FLAGS) $<

InfrastructuralCode.o: $(INFDIR)InfrastructuralCode.f90 $(INFINC)
	$(FC) -c $(F90FLAGS) $<

# CB: Add String Library as a requirement
# - IT IS OKAY FOR RIGHT NOW THAT GFORTRAN IS DEFINED REGARDLESS OF
#   PLATFORM; IT DOESN'T CHANGE ANYTHING AT THE MOMENT - 
#StringIO.o: $(INFDIR)StringIO.F90 InfrastructuralCode.o
#	$(FC) -c -DGFORTRAN $(F90FLAGS) $<

# CMB (AER): force preprocessing of this file for function declaration reasons?
GridPointFields.o: $(EULERDIR)GridPointFields.f90 ModelParameters.o \
    InfrastructuralCode.o $(EULERINC) $(INFINC)
	$(FC) -c $(F90FLAGS) $<

Time.o: $(SOURCEDIR)Time.f90 ModelParameters.o
	$(FC) -c $(F90FLAGS) $<

Chemistry.o: $(CHEMDIR)Chemistry.f90 Time.o   ModelParameters.o \
    InfrastructuralCode.o GridPointFields.o $(CHEMINC) $(EULERINC) $(INFINC)
	$(FC) -c $(F90FLAGS) $<

ReadInputDeck.o: $(SOURCEDIR)ReadInputDeck.f90 GridPointFields.o Chemistry.o \
    ModelParameters.o InfrastructuralCode.o $(CHEMINC) $(EULERINC) $(INFINC)
	$(FC) -c $(F90FLAGS) $<

LagrangianAerosols.o: $(PARTDIR)LagrangianAerosols.f90 \
    GridPointFields.o  Chemistry.o ModelParameters.o \
    InfrastructuralCode.o   Time.o $(CHEMINC) $(EULERINC) \
    $(INFINC) $(AEROINC)
	$(FC) -c $(F90FLAGS) $<

Condensation.o: $(CONDDIR)Condensation.f90 \
    GridPointFields.o Chemistry.o ModelParameters.o InfrastructuralCode.o \
    LagrangianAerosols.o $(CHEMINC) $(EULERINC) $(INFINC) $(AEROINC) \
    $(CONDINC)
	$(FC) -c $(F90FLAGS) $<

OutputRoutines.o: $(OUTPUTDIR)OutputRoutines.f90 GridPointFields.o \
    Chemistry.o ModelParameters.o InfrastructuralCode.o \
    LagrangianAerosols.o Condensation.o $(CHEMINC) $(EULERINC) $(INFINC) \
    $(AEROINC) $(CONDINC)
	$(FC) -c $(F90FLAGS) $<

Coagulation.o: $(COAGDIR)Coagulation.f90 GridPointFields.o Chemistry.o \
    ModelParameters.o InfrastructuralCode.o LagrangianAerosols.o \
    OutputRoutines.o $(CHEMINC) $(EULERINC) $(INFINC) $(AEROINC) \
    $(CONDINC) $(COAGINC)
	$(FC) -c $(F90FLAGS) $<

StepASP.o: $(SOURCEDIR)StepASP.f90 GridPointFields.o Condensation.o \
    ModelParameters.o Time.o LagrangianAerosols.o $(ALLINC)
	$(FC) -c $(F90FLAGS) $<

DevelopmentDriver.o: $(SOURCEDIR)DevelopmentDriver.f90 $(OBJECTS) $(ALLINC)
	$(FC) -c $(F90FLAGS) $<

# Need to include STILT-Chem .INC files
asp_wrapper.o: $(SOURCEDIR)asp_wrapper.f ModelParameters.o Chemistry.o \
    GridPointFields.o \
    LagrangianAerosols.o Condensation.o OutputRoutines.o Coagulation.o \
    InfrastructuralCode.o StepASP.o $(ALLINC)
	$(FC) -c $(F90FLAGS) \
	    -I../STILT-Chem/includes $<

##
## === Dependency
##

clean:
	rm -f $(ASP_LIB)
	rm -f *.o
	rm -f *.mod


# TODO: Original version does not have the F90 flags but instead FFLAGS; will
# 	this matter?  STILT-ASP will not call this make anyways...
# FIXME: Nothing re: standalone asp has been tested or attempted here
run_standalone_asp:
	$(MAKE) all
	$(FC) $(F90FLAGS) -o $(ASP_STANDALONE) $(EXEOBJECTS) $(EXEMODS)

# Will the second one work on ifort?  Probably not...
# Also, add asp_wrapper.o
#$(ASP_LIB): $(OBJECTS) $(MODS) asp_wrapper.o
#	$(AR) $(AR_FLAGS) $(ASP_LIB) asp_wrapper.o $(OBJECTS) $(MODS)

all: $(OBJECTS) $(MODS)
	$(AR) $(AR_FLAGS) $(ASP_LIB) $(OBJECTS) $(MODS)

install:
	echo ""; \
	if [ -a $(ASP_LIB) ]; then \
		echo "Moving ASP Library '$(ASP_LIB)' to $(LIBRARY_INSTALL_DIR)"; \
		mv $(ASP_LIB) $(LIBRARY_INSTALL_DIR); \
		echo "ASP library '$(ASP_LIB)' successfully installed in $(LIBRARY_INSTALL_DIR)'"; \
	else \
		echo "*** Error: Cannot install ASP library '$(ASP_LIB)' ***";\
		echo "*** Did you forget to run a 'make all' first? ***";\
	fi;

