!-------------------------------------------------------------------------------
! DEFCONC.INC 
! Defines concentration grid  structure, the pollutant identification, and
! release information.  Required as an INCLUDE for most CON routines.
! LAST REVISED: 29 Jan 1997 (RRD)
!               20 Sep 2000 (RRD) - fortran90 upgrade
!               27 Aug 2003 (RRD) - volume units conversion flag 
!-------------------------------------------------------------------------------

! CB: Let's make this a variable name
      INTEGER, PARAMETER :: maxSpeciesNameLength = 16
      INTEGER, PARAMETER :: maxMappingSpecies = 99
      CHARACTER(maxSpeciesNameLength) :: &
        emptySpeciesName = "                "


!-------------------------------------------------------------------------------
! time identification 
!-------------------------------------------------------------------------------

  TYPE SSET
     SEQUENCE

     INTEGER    ::  yr      ! year
     INTEGER    ::  mo      ! month
     INTEGER    ::  da      ! day
     INTEGER    ::  hr      ! hour
     INTEGER    ::  mn      ! minute
     INTEGER    ::  ic      ! forecast hour
     INTEGER    ::  macc    ! accumulated minutes

  END TYPE

!-------------------------------------------------------------------------------
! define the geographic GRID parameters
!-------------------------------------------------------------------------------

      TYPE CSET
      SEQUENCE

      CHARACTER(80) :: dir           ! directory location
      CHARACTER(80) :: file          ! file name
      INTEGER       :: unit          ! associated unit number 
      INTEGER       :: numb_lat      ! number of latitude points
      INTEGER       :: numb_lon      ! number of longitude points
      REAL          :: delt_lat      ! latitude spacing in degrees
      REAL          :: delt_lon      ! longitude spacing in degrees
      REAL          :: size          ! grid size (km)
      REAL          :: x1y1_lat      ! lower left latitude
      REAL          :: x1y1_lon      ! lower left longitude
      INTEGER       :: snap          ! type of averaging (0:std 1:snapshot)
      INTEGER       :: levels        ! number of levels
      INTEGER       :: height(99)    ! heights of each level (m)
      TYPE(sset)    :: start         ! sample start time
      TYPE(sset)    :: stop          ! sample stop time
      TYPE(sset)    :: delta         ! sample integration interval
      TYPE(sset)    :: now           ! current time of sample

      END TYPE

!-------------------------------------------------------------------------------
! define the pollutant parameters
!-------------------------------------------------------------------------------

      TYPE PSET
      SEQUENCE

      ! CMB: Identification label extended to 16 characters to account for
      !      longer ASP field names.  Also, in order to make portable from
      !      ASP to STILT and back, changed all reals to real*4.
      !CHARACTER(4)  :: ident   ! identifcation label
      CHARACTER(maxSpeciesNameLength) :: ident
      REAL*4          :: qrate   ! emission rate in units per hour
      REAL*4          :: qhrs    ! hours of emission
      TYPE(sset)    :: start   ! emission starting time
      LOGICAL       :: dowet   ! wet removal flag
      LOGICAL       :: dodry   ! dry removal flag
      LOGICAL       :: dorad   ! radioactive decay flag
      LOGICAL       :: dores   ! resistance method flag
      LOGICAL       :: dogas   ! gas definition flag
      LOGICAL       :: dogrv   ! gravitational settling flag
      LOGICAL       :: dosus   ! resuspension flag
      LOGICAL       :: dovol   ! convert mass to volume units (emsgrd)
      REAL*4        :: wetin   ! wet removal ratio for within-cloud (by volume)
      REAL*4          :: wetlo   ! wet removal coefficient below-cloud (1/sec)
      REAL*4          :: wetgas  ! henry's consant for wet removal of gases
      REAL*4          :: henry   ! effective henry's constant for dry deposition
      REAL*4          :: dryvl   ! dry removal deposition velocity (m/s)
      REAL*4          :: pdens   ! particle density (g/m3)
      REAL*4          :: pdiam   ! particle diameter (um)
      REAL*4          :: shape   ! particle shape factor (0-1)
      REAL*4          :: rhalf   ! radioactive half life (days)
      REAL*4          :: gpmol   ! gram molecular weight
      REAL*4          :: acvty   ! pollutant activity ratio for dry deposition
      REAL*4          :: difty   ! ratio pollutant diffusivity to water vapor
      REAL*4          :: srate   ! deposition resuspension constant

      END TYPE

! CB: Let's store value for R in different units
      real, parameter :: R__J_K_mol = 8.3144598  ! or other units
      real, parameter :: R__Latm_K_mol = 0.082057338
      real*8, parameter :: avogadrosnum = 6.022140857E23
      integer, parameter :: L_TO_CM3 = 1000
      integer, parameter :: M3_TO_CM3 = 100000
  
! CB: Define vector type to store all observations
      TYPE psetVector
        SEQUENCE
        INTEGER :: vecLength
        TYPE(PSET), ALLOCATABLE :: species(:)
      END TYPE

! CB: Add combo system
      TYPE combotype
        SEQUENCE
        integer :: adt_cb4_flag
        type(pset) :: species
      end type
      type comboVector
        sequence
        integer :: vecLength
        type(combotype), allocatable :: combos(:)
      end type
! define concentration mapping structure
      TYPE specificCB4Conc
      SEQUENCE
      character(maxSpeciesNameLength) :: cb4SpeciesName 
      integer :: numASPSpecies
      character(maxSpeciesNameLength), allocatable :: namesOfASPSpecies(:)
      integer, allocatable :: indicesOfASPSpecies(:)
      END TYPE
      
      ! Let's just make this static; eventually we want a linked list
      ! but we don't have time for that now 
      TYPE allCB4MappingConc
      SEQUENCE
      integer :: totalNumCB4Species
      integer :: totalNumASPSpecies
      type(specificCB4Conc) :: speciesMap(maxMappingSpecies)
      END TYPE
      
      
! CB: Define vector types to store mapping
      TYPE identVector
        SEQUENCE
        integer :: vecLength
        character(maxSpeciesNameLength), ALLOCATABLE :: species(:)
      END TYPE
      TYPE cb4MappingStruct
        SEQUENCE
        INTEGER :: vecLength
        TYPE(identVector) :: cb4vector
        TYPE(identVector) :: aspvector
      END TYPE

! CB: Let's specify some others
      integer, parameter :: lengthCb4NotUsedInASP = 8
! UPDATED for gfortran, which doesn't like the char*# declaration
      character(lengthCb4NotUsedInASP) :: cb4NotUsedInASP = "[UNUSED]"

! CB: Let's specify default values for copy "constructor"
!      TYPE(pset) :: defaultPsetGas
!      defaultPsetGas%ident = '                '
!      defaultPsetGas%qrate = 0.0
!      defaultPsetGas%qhrs = 0.0
!      defaultPsetGas%start%yr = 0
!      defaultPsetGas%start%mo = 0
!      defaultPsetGas%start%da = 0
!      defaultPsetGas%start%hr = 0
!      defaultPsetGas%start%mn = 0
!      defaultPsetGas%start%ic = 0
!      defaultPsetGas%start%macc = 0
!      defaultPsetGas%dowet = .FALSE.
!      defaultPsetGas%dodry = .FALSE.
!      defaultPsetGas%dorad = .FALSE.
!      defaultPsetGas%dores = .FALSE.
!      defaultPsetGas%dogas = .FALSE.
!      defaultPsetGas%dogrv = .FALSE.
!      defaultPsetGas%dosys = .FALSE.
!      defaultPsetGas%dovol = .FALSE.
!      defaultPsetGas%wetin = 0.0 
!      defaultPsetGas%wetlo = 0.0 
!      defaultPsetGas%wetgas = 0.0 
!      defaultPsetGas%henry = 0.0 
!      defaultPsetGas%dryvl = 0.0 
!      defaultPsetGas%pdens = 0.0 
!      defaultPsetGas%pdiam = 0.0 
!      defaultPsetGas%shape = 0.0 
!      defaultPsetGas%rhalf = 0.0 
!      defaultPsetGas%gpmol = 0.0 
!      defaultPsetGas%acvty = 0.0 
!      defaultPsetGas%difty = 0.0 
!      defaultPsetGas%srate = 0.0
 
